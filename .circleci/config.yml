version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.6
        environment:
          PIPENV_CACHE_DIR: ~/pipenv-cache

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Pipfile" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            pip3 install pipenv --user
            python3 -m pipenv install --dev

      - save_cache:
          paths:
            - ~/pipenv-cache
          key: v1-dependencies-{{ checksum "Pipfile" }}

      - run:
          name: run tests
          command: |
            python3 -m pipenv run pytest --junitxml=test-results/pytest/results.xml --cov=src
      - store_test_results:
          path: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "62:72:3a:58:97:e4:92:5e:9b:b4:ca:ee:2d:19:ef:65"
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "./deploy.sh $CIRCLE_BRANCH"
  deploy-prod:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "62:72:3a:58:97:e4:92:5e:9b:b4:ca:ee:2d:19:ef:65"
      - run:
          name: Deploy Production Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "./deploy.sh $CIRCLE_BRANCH prod"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:  master
  build-and-prod-deploy:
    jobs:
      - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy-prod:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
