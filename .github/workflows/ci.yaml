name: CI and CD

on: [push, pull_request, release]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
          source $HOME/.poetry/env
          poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v1
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Dependencies
        run: |
          source $HOME/.poetry/env
          poetry install
      - name: Run Tests
        run: |
          source $HOME/.poetry/env
          poetry run pytest --cov=src

  deploy-beta:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Deploy on remote machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: ./deploy.sh master

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Deploy on remote machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: ./deploy.sh master prod
